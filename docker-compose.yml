version: '3.2'
services:
  configserver:
    image: docker.io/library/configserver:0.0.1-SNAPSHOT
    container_name: configServer
    ports:
       - "8071:8071"
    environment:
      ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
    networks:
      lnk:
        aliases:
          - "configserver"
  eurekaserver:
    image: docker.io/library/eurekaserver:0.0.1-SNAPSHOT
    container_name: eurekaServer
    ports:
      - "8761:8761"
    networks:
      lnk:
        aliases:
          - "eurekaserver"
  gatewayserver:
    image: docker.io/library/gatewayserver:0.0.1-SNAPSHOT
    container_name: gateway
    ports:
      - "8072:8072"
    networks:
      lnk:
        aliases:
          - "gatewayserver"
  base:
    image: docker.io/library/base:0.0.1-SNAPSHOT
    container_name: base
    ports:
      - "8180:8180"
    networks:
      lnk:
        aliases:
          - "base"
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper    
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1      
      KAFKA_CREATE_TOPICS: "Topic:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock
    depends_on:
      - zookeeper
volumes:
  esdata1:
    driver: local
networks:
  lnk:
    driver: bridge
    external: true
    internal: true